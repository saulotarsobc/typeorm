generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator typescriptInterfaces {
  provider      = "prisma-generator-typescript-interfaces"
  output        = "../src/dto/interfaces.ts"
  bigIntType    = "bigint"
  bytesType     = "Buffer"
  dateType      = "Date"
  decimalType   = "number"
  headerComment = ""
  modelType     = "interface"
  omitRelations = "false"
  prettier      = "true"
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model Group {
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  id          Int      @id(map: "PK_group") @default(autoincrement())
  name        String   @db.VarChar
  description String?  @db.VarChar
  users       User[]

  @@map("groups")
}

model User {
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  id         Int      @id(map: "PK_user") @default(autoincrement())
  username   String   @db.VarChar
  password   String   @db.VarChar
  group_id   Int
  person     Person?
  group      Group    @relation(fields: [group_id], references: [id], onUpdate: NoAction, map: "FK_user_group")

  @@map("users")
}

model Addresses {
  created_at     DateTime        @default(now()) @db.Timestamp(6)
  updated_at     DateTime        @default(now()) @db.Timestamp(6)
  id             Int             @id(map: "PK_address") @default(autoincrement())
  street         String          @db.VarChar(200)
  number         String?         @db.VarChar(50)
  complement     String?         @db.VarChar(150)
  neighborhood   String?         @db.VarChar(100)
  city           String?         @db.VarChar(100)
  state          String?         @db.VarChar(50)
  zip_code       String?         @db.VarChar(20)
  country        String?         @db.VarChar(100)
  coordinates    Json?           @db.Json
  person_address PersonAddress[]

  @@index([zip_code], map: "IDX_zip_code")
  @@map("addresses")
}

model PersonAddress {
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  person_id  Int
  address_id Int
  addresses  Addresses @relation(fields: [address_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_person_address_address_id")
  person     Person    @relation(fields: [person_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "FK_person_address_person_id")

  @@id([person_id, address_id], map: "PK_person_address")
  @@map("person_address")
}

model Person {
  created_at     DateTime        @default(now()) @db.Timestamp(6)
  updated_at     DateTime        @default(now()) @db.Timestamp(6)
  cpf            String          @unique(map: "UQ_person_cpf") @db.VarChar
  email          String          @unique(map: "UQ_person_email") @db.VarChar
  type           PersonTypeEnum  @default(individual)
  user_id        Int             @id(map: "PK_person_user_id")
  person_address PersonAddress[]
  user           User            @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "FK_person_user_id")

  @@map("persons")
}

enum PersonTypeEnum {
  individual
  company
}
